import{P as g}from"./PicoView-iUxXwDXZ.js";import{S as b}from"./Selection-DBGP1SeL.js";import{A as c}from"./AppRequest-BdPYhK6t.js";import{G as y,a as E}from"./Grid-7GupHutO.js";import{t as h,p as P,o as B,r as I}from"./domHelpers-0caSGQTr.js";document.addEventListener("DOMContentLoaded",async()=>{const u=document.getElementById("grid"),n=document.getElementById("album").dataset.albumId;new b(u);const o=new L(n),s=new g(u);o.init(),f(s,o),v(u,s),document.getElementById("offcanvas-share-album").addEventListener("show.bs.offcanvas",async function(r){try{const t=a.getAttribute("data-album-id"),l=await c.request(route("api.albums.tokens",{album:t}),"GET"),e=document.getElementById("tokenList");l.data.forEach(d=>{e.appendChild(p(d))})}catch(t){console.error(t)}});const a=document.getElementById("generateTokenBtn");a.addEventListener("click",async function(r){r.preventDefault();try{const t=a.getAttribute("data-album-id"),l=await c.request(route("api.tokens.store"),"POST",{album_id:t});document.getElementById("tokenList").appendChild(p(l.data)),console.log(l)}catch(t){console.error(t)}});function p(r){const t=route("albums.show",{album:r.album_id,token:r.token}),e=document.getElementById("tokenTpl").content.cloneNode(!0);e.querySelector("input").value=t,e.querySelector(".expiry").classList.toggle("d-none",!r.expires_at),e.querySelector(".expires_at").value=r.expires_at,e.querySelector(".btn-copy").addEventListener("click",()=>{navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(t):(m.closest(".token-wrapper").querySelector("input").select(),document.execCommand("copy")),h("clipboardToast")});const m=e.querySelector(".btn-delete");return m.addEventListener("click",()=>{c.request(route("api.tokens.destroy",{token:r.id}),"DELETE"),m.closest(".token-wrapper").remove(),h("deleteToast")}),e}function f(r,t){const l={"photo.more":e=>t.showMore(),"photo.info":e=>t.viewInfo(e.detail.id),"photo.cover":e=>t.setCover(e.detail.id),"photo.download":e=>t.forceDownload(e.detail.id),"photo.remove":e=>{t.remove(e.detail.id),r.next()}};for(const[e,d]of Object.entries(l))r.addEventListener(e,d)}function v(r,t){Object.entries({"grid.refresh":e=>t.refresh(),"selection.start":e=>t.disable(),"selection.stop":e=>t.enable()}).forEach(([e,d])=>{r.addEventListener(e,d)})}});class L{constructor(n){this.id=n,this.grid=new y(this),this.loader=new q(n)}async init(){this.grid.clear(),await this.showMore()}async showMore(){if(this.loader.hasNextPage()){const o=(await this.loader.next()).map(async i=>{const a=await E.photo(i);return a.querySelector(".btn-delete").addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.remove(i.id)}),a.querySelector(".btn-info").addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.viewInfo(i.id)}),a.querySelector(".btn-cover").addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.setCover(i.id)}),a.querySelector(".btn-download").addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.forceDownload(i.id)}),a}),s=await Promise.all(o);this.grid.add(s)}}async viewInfo(n){try{const o=route("api.photos.show",{photo:n}),s=await c.request(o,"GET");P(document.getElementById("infoForm"),{dimensions:`${s.data.width} x ${s.data.height}`,...s.data})}catch(o){console.error(o)}B("offcanvas-info")}forceDownload(n){const o=route("photos.download",{photo:n});window.location.href=o}async setCover(n){try{const o=route("api.albums.update",{album:this.id});await c.request(o,"PATCH",{photo_id:n}),h("coverToast")}catch(o){console.error(o)}}async remove(n){const o=document.getElementById(`card-${n}`);try{const a=route("api.albums.photos.removeOne",{album:this.id,photo:n});await c.request(a,"DELETE")}catch(a){console.error(a)}const s=h("removalToast");this.grid.remove(o);const i=document.getElementById("btn-undo");I(i).addEventListener("click",async()=>{try{const a=route("api.albums.photos.addOne",{album:this.id,photo:n});await c.request(a,"PUT")}catch(a){console.error(a)}this.grid.add(o),s.hide()})}}class q{constructor(n){this.albumId=n,this.lastPage=null,this.currentPage=0}async start(){return this.currentPage=0,await this.next()}hasNextPage(){return this.lastPage==null||this.currentPage<this.lastPage}async next(){return this.hasNextPage()?await this._fetchPage(this.currentPage+1):[]}async _fetchPage(n=1){if(this.albumId==null||c.isLoading(this.albumId))return[];try{const o=await c.request(`/api/albums/${this.albumId}/photos?page=${n}`,"GET",null,this.albumId);return this.currentPage=o.meta.current_page,this.lastPage=o.meta.last_page,o.data}catch(o){console.error(o)}return[]}}
