const u=(function(){let n=!1,e=0;const s=document.getElementById("indicator-loading");function o(){s&&(s.classList.toggle("d-none",e===0&&!n),s.classList.toggle("text-danger",n))}return{start:function(){e++,o()},stop:function(){e>0&&(e--,o())},error:function(){e>0&&(n=!0,o())},isLoading:function(){return e>0&&!n},reset:function(){e=0,o()}}})(),d=(function(){const n=new Set;return{isLoading(e=null){return e?n.has(e):n.size>0},async request(e,s="GET",o=null,p=null,a=!0){const r=p||`${s.toUpperCase()}:${e}`;if(n.has(r)){console.warn("Request already in progress:",r);return}n.add(r),a&&u.start();const c={method:s.toUpperCase(),credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"}};if(o){const t=o instanceof FormData;c.body=t?o:JSON.stringify(o),t||(c.headers["Content-Type"]="application/json")}try{let t;const i=await fetch(e,c);if((i.headers.get("content-type")||"").includes("application/json"))try{t=await i.json()}catch(l){console.log(l)}else t=await i.text();if(!i.ok){a&&u.error(i.status);const l=typeof t=="object"&&t?.message||t;throw new Error(l||"Request failed")}return t}catch(t){throw console.log(t),t}finally{n.delete(r),a&&u.stop()}}}})();export{d as A};
