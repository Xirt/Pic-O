const c=(function(){let e=!1,t=0;const s=document.getElementById("indicator-loading");function o(){s&&(s.classList.toggle("d-none",t===0&&!e),s.classList.toggle("text-danger",e))}return{start:function(){t++,o()},stop:function(){t>0&&(t--,o())},error:function(){t>0&&(e=!0,o())},isLoading:function(){return t>0&&!e},reset:function(){t=0,o()}}})(),d=(function(){const e=new Set;return{isLoading(t=null){return t?e.has(t):e.size>0},async request(t,s="GET",o=null,u=null,i=!0){const r=u||`${s.toUpperCase()}:${t}`;if(e.has(r)){console.warn("Request already in progress:",r);return}e.add(r),i&&c.start();const a={method:s.toUpperCase(),credentials:"include",headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]')?.content,Accept:"application/json","Content-Type":"application/json"}};if(o){const n=o instanceof FormData;a.body=n?o:JSON.stringify(o),n||(a.headers["Content-Type"]="application/json")}try{const n=await fetch(t,a);if(!n.ok){const l=n.status;i&&c.error(l);const f=await n.json().catch(()=>({}));throw new Error(f.message||"Request failed")}return await n.json()}catch(n){throw console.log(n),n}finally{e.delete(r),i&&c.stop()}}}})();export{d as A};
