import{g as d,c as l,p as h,o as u,r as f,t as y}from"./domHelpers-nYN5pVaO.js";import{S as p}from"./Selection-BoYlDC7p.js";import{A as c}from"./AppRequest-BAjaqpDZ.js";import{G as b,a as g}from"./Grid-qJBJwWe3.js";import{S as v}from"./SelectionManager-BSsIT1AF.js";const m={searchQuery:"",direction:"ASC",order:"name",debounceTimer:null,debounceDelay:300,searchInput:document.getElementById("inp-search"),orderItems:document.querySelectorAll(".dropdown-item[data-order]"),directionItems:document.querySelectorAll(".dropdown-item[data-direction]"),init(o){this.callback=o,this.bindSearch(),this.bindOrdering(),this.bindDirection()},bindSearch(){this.searchInput.addEventListener("input",()=>{const o=this.searchInput.value.trim();clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(()=>{this.searchQuery=o,this.reload()},this.debounceDelay)})},bindOrdering(){this.orderItems.forEach(o=>{o.addEventListener("click",e=>{e.preventDefault();const t=o.dataset.order;t!==this.order&&(this.orderItems.forEach(s=>s.classList.remove("selected")),o.classList.add("selected"),this.order=t,this.reload())})})},bindDirection(){this.directionItems.forEach(o=>{o.addEventListener("click",e=>{e.preventDefault();const t=o.dataset.direction;t!==this.direction&&(this.directionItems.forEach(s=>s.classList.remove("selected")),this.direction=t,o.classList.add("selected"),this.reload())})})},async reload(){this.callback()}};document.addEventListener("DOMContentLoaded",async()=>{const o=document.getElementById("grid");new p(o);const e=new w;e.init(),document.getElementById("modifyButton").addEventListener("click",async a=>{const n=document.querySelector(".card.selected");e.showModifyAlbum(n),a.preventDefault()}),document.getElementById("deleteButton").addEventListener("click",async a=>{const n=document.querySelectorAll(".card.selected");e.showRemovalconfirmation(n),a.preventDefault()});const r=document.getElementById("createAlbumForm");r.addEventListener("submit",async function(a){if(a.preventDefault(),!r.checkValidity()){r.reportValidity();return}try{await c.request(r.action,"POST",d(r),"albums"),await e.init()}catch(n){console.error(n)}l("offcanvas-create-album"),r.reset()});const i=document.getElementById("updateAlbumForm");i.addEventListener("submit",async function(a){a.preventDefault();try{const n=document.getElementById("albumId").value;await c.request(route("api.albums.update",{album:n}),"PATCH",d(i),"albums"),await e.init()}catch(n){console.error(n)}l("offcanvas-modify-album"),i.reset()}),new v({elements:{input:"dropdownInput",menu:"dropdownMenu",container:"search-dropdown-container",hiddenInput:"dropdownHidden"},apiUrl:route("api.folders.search"),renderItem:null})});class w{constructor(){m.init(()=>{this.init()}),this.grid=new b(this),this.loader=new E(m)}async init(){this.grid.clear(),await this.show()}async show(){const e=await this.loader.start();this._show(e)}async showMore(){if(this.loader.hasNextPage()){const e=await this.loader.next();this._show(e)}}async _show(e){const t=await Promise.all(e.map(async s=>{const r=await g.album(s);return r.querySelector(".btn-modify").addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),this.showModifyAlbum(r)}),r.querySelector(".btn-delete").addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),this.showRemovalconfirmation(r)}),r}));this.grid.add(t)}async showModifyAlbum(e){try{const t=route("api.albums.show",{album:e.getAttribute("data-id")}),s=await c.request(t,"GET");h(document.getElementById("updateAlbumForm"),s.data)}catch(t){console.error(t)}u("offcanvas-modify-album")}showRemovalconfirmation(e){let t=[e];e instanceof NodeList&&(t=Array.from(e));const s=document.getElementById("delCount");s.textContent=t.length;const r=u("offcanvas-remove-album");let i=document.getElementById("btn-remove");f(i).addEventListener("click",()=>{try{for(const a of t){const n=route("api.albums.destroy",{album:a.getAttribute("data-id")});c.request(n,"DELETE"),y("Album(s) deleted"),this.grid.remove(a)}}catch(a){console.log(a)}r.hide()})}}class E{constructor(e){this.filter=e,this.lastPage=null,this.currentPage=0}async start(){return this.currentPage=0,await this.next()}hasNextPage(){return this.lastPage==null||this.currentPage<this.lastPage}async next(){return this.hasNextPage()?this._fetchPage(this.currentPage+1):[]}async _fetchPage(e=1){if(c.isLoading("albums"))return[];try{const t=this.filter,s=`/api/albums/search?q=${encodeURIComponent(t.searchQuery)}&order=${encodeURIComponent(t.order)}&direction=${t.direction}&page=${e}`,r=await c.request(s,"GET",null,"albums");return this.currentPage=r.meta.current_page,this.lastPage=r.meta.last_page,r.data}catch(t){console.error(t)}return[]}}
