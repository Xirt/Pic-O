const r=(()=>{let i,t=0,e={onEnter:null,onExit:null};function n(o=".toolbar",{onEnter:d=null,onExit:c=null}={}){let h,f;i=document.querySelector(o),e.onEnter=d,e.onExit=c,(h=i.querySelector(".select-start"))&&h.addEventListener("click",a=>{a.preventDefault(),s(0),typeof e.onEnter=="function"&&e.onEnter()}),(f=i.querySelector(".select-stop"))&&f.addEventListener("click",a=>{a.preventDefault(),u(),typeof e.onExit=="function"&&e.onExit()}),l()}function s(o=0){t=o,i.classList.add("selection-mode"),l()}function u(){t=0,i.classList.remove("selection-mode"),l()}function v(o){t=o,l()}function l(){i.querySelectorAll(".select-action-single").forEach(c=>{c.disabled=t!=1}),i.querySelectorAll(".select-action").forEach(c=>{c.disabled=t<=0})}return{init:n,show:s,hide:u,update:v}})();class p{constructor(t,e){this.container=t,this.active=!1,this.selection=new Set,this.setupSelectionListener(),this.setupToolbar()}setupToolbar(){r.init(".toolbar",{onEnter:()=>{this.enterSelectionMode()},onExit:()=>{this.cancelSelection()}})}setupSelectionListener(){let t=null;this.container.addEventListener("mousedown",e=>{t=setTimeout(()=>{const n=e.target.closest(".selectable");n&&this.container.contains(n)&&this.enterSelectionMode()},400),e.preventDefault()}),this.container.addEventListener("mouseup",e=>{if(clearTimeout(t),!this.active)return;const n=e.target.closest(".selectable");if(!n||!this.container.contains(n))return;const s=n.dataset.id;this.selection.has(s)?(this.selection.delete(s),n.classList.remove("selected")):(this.selection.add(s),n.classList.add("selected")),r.update(this.selection.size),e.stopPropagation(),e.preventDefault()}),this.container.addEventListener("click",e=>{this.active&&(e.stopPropagation(),e.preventDefault())}),this.container.addEventListener("mouseleave",()=>clearTimeout(t))}enterSelectionMode(){this.active=!0,this.container.parentElement.classList.add("selection-mode"),r.show(this.getCount()),this.container.dispatchEvent(new CustomEvent("selection.start",{}))}cancelSelection(){this.active&&(this.active=!1,this.selection.clear(),this.container.parentElement.classList.remove("selection-mode"),this.container.querySelectorAll(".selected").forEach(t=>t.classList.remove("selected")),r.hide()),this.container.dispatchEvent(new CustomEvent("selection.stop",{}))}getSelectedIds(){return Array.from(this.selection)}getCount(){return this.selection.size}}export{p as S};
